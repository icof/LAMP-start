name: Tests

on:
  push:
    branches: [ main, master ]
    paths:
      - 'site/**/*.php'
      - 'tests/**/*.php'
      - 'composer.json'
      - 'composer.lock'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'site/**/*.php'
      - 'tests/**/*.php'
      - 'composer.json'
      - 'composer.lock'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']

    name: PHP ${{ matrix.php-version }} Tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl
        coverage: xdebug

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Create PHPUnit configuration
      run: |
        cat > phpunit.xml << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:noNamespaceSchemaLocation="https://schema.phpunit.de/10.5/phpunit.xsd"
                 bootstrap="vendor/autoload.php"
                 colors="true"
                 cacheDirectory=".phpunit.cache"
                 failOnDeprecation="true"
                 failOnNotice="true"
                 failOnWarning="true">
            <testsuites>
                <testsuite name="default">
                    <directory>tests</directory>
                </testsuite>
            </testsuites>
            <coverage>
                <report>
                    <html outputDirectory="coverage-html"/>
                    <clover outputFile="coverage.xml"/>
                </report>
            </coverage>
            <source>
                <include>
                    <directory>site</directory>
                </include>
            </source>
        </phpunit>
        EOF

    - name: Run PHPUnit tests
      run: ./vendor/bin/phpunit --verbose

    - name: Run PHPUnit tests with coverage
      run: ./vendor/bin/phpunit --coverage-html coverage-html --coverage-clover coverage.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-php-${{ matrix.php-version }}
        path: |
          coverage-html/
          coverage.xml
        retention-days: 7

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.php-version == '8.1'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Check test results
      run: |
        if [ $? -eq 0 ]; then
          echo "✅ All tests passed successfully"
        else
          echo "❌ Some tests failed"
          exit 1
        fi
